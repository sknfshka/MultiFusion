#ifndef __LAYERS_EDITOR_INTERFACE_H__
#define __LAYERS_EDITOR_INTERFACE_H__
/**
*	@file layerseditorinterface.h В данном файле описан интерфейс, который должен реализовывать
*		любой плагин, отвечающий отображение слоёв и редактирование их послеовательности при
*		отрисовке.
*/

/**
*		Интерфейс, который должен реализовывать
*	любой плагин, отвечающий отображение слоёв и редактирование их послеовательности при
*	отрисовке. Плагин, реализующий данный интерфейс должен наследоваться от любого потомка класса
*	QWidget или от него самого.
*
*		Кроме реализации данного интерфейса, любой такой плагин должен предоставлять
*	следующие сигналы:
*
*	@code
*
*	void layerSelected( int index );	//Должен генерироваться при выделении пользователем того или иного слоя.
*										//В параметре должен передаваться номер выбранного слоя.
*
*	void movedFirst( int index );		//Должен генерироваться при перемещении некоторого слоя на передний план.
*										//В параметре должен передаваться номер перемещённого слоя.
*
*	void movedUp( int index );			//Должен генерироваться при перемещении некоторого слоя на уровень вверх.
*										//В параметре должен передаваться номер перемещённого слоя.
*
*	void movedDown( int index );		//Должен генерироваться при перемещении некоторого слоя на уровень вниз.
*										//В параметре должен передаваться номер перемещённого слоя.
*
*	void movedLast( int index );		//Должен генерироваться при перемещении некоторого слоя на задний план.
*										//В параметре должен передаваться номер перемещённого слоя.
*
*	void deleted( int index );			//Должен генерироваться при удалении некоторого слоя.
*										//В параметре должен передаваться номер удалённого слоя.
*
*	void renamed( int index, const QString &name );	//Должен генерироваться при переименовании некоторого слоя.
*										//В параметре должен передаваться номер переименованного слоя и его новое имя.
*
*	void visibleChanged( int index, bool visible );	//Должен генерироваться при изменении видимости некоторого слоя.
*										//В параметре должен передаваться номер переименованного слоя и его текщая видимость.
*
*	@endcode
*/
class LayersEditorInterface:public QWidget
{
	public:
		/**
		*	Этот метод должен добавлять новый слой на передний план.
		*
		*	@param name имя нового слоя.
		*	@param visibleChanged видимость нового слоя.
		*/
		//virtual void addLayer( const QString &name, bool visible ) = 0;

		/**
		*	Этот метод должен удалять слой с некоторым индексом.
		*
		*	@param index номер удаляемого слоя.
		*/
		virtual void deleteLayer( int index ) = 0;

		/**
		*	Этот метод должен выделять выбранный слой.
		*
		*	@param index норер слоя, который необходимо выделить.
		*/
		virtual void selectFigure( int index, int obj ) = 0;

		/**
		*	Полная очистка списка и удаление из него всех слоёв.
		*/
		virtual void clear() = 0;

				/**
				*	Конструктор.
				*/
				LayersEditorInterface()
				{
				}

		/**
		*	Деструктор.
		*/
		virtual ~LayersEditorInterface()
		{
		}
};

Q_DECLARE_INTERFACE( LayersEditorInterface, "com.alxn1.sacs2.LayersEditorInterface/1.0" )

/**
*	Приводит указатель на любой обьект к указателью на интерфейс LayersEditorInterface.
*
*	@return Приведённый указатель или 0, если произошла ошибка.
*/
template < class T > inline LayersEditorInterface* LAYERSEDITOR( T *o )
{
	return qobject_cast< LayersEditorInterface* >( o );
}

#endif /* __LAYERS_EDITOR_INTERFACE_H__ */
